{"version":3,"sources":["components/App/App.styled.js","components/Searchbar/SearchBar.styled.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.styled.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","services/photos-api.js","components/Button/Button.styled.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["Container","styled","div","SearchBarHeader","header","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","SearchBar","state","searchName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","NoNameDiv","ImageGalleryList","ul","ImageGalleryListItem","li","ImageGalleryItemImage","img","ImageGalleryItem","src","alt","Spinner","PhotosLoader","color","height","width","timeout","BASE_URL","API_KEY","fetchPhotos","currentPage","a","parameters","url","axios","get","response","data","LoadMoreBtn","Button","onClick","className","ImageGallery","photos","status","page","togleLoadMoreBtn","console","log","window","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","prevState","prevName","nextName","prevPage","nextPage","prevPhotos","then","hits","length","map","id","largeImageURL","tags","webformatURL","onSelect","Overlay","ModalWindow","modalRoot","querySelector","Modal","handleKeyDown","e","code","onClose","handleOverlayClick","target","addEventListener","removeEventListener","createPortal","children","App","selectedPhoto","selectedAlt","handleFormSubmit","handleSelectedPhoto","imageURL","description","closeModal","Searchbar","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.654c60b4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nimport { ImSearch } from 'react-icons/im';\nimport toast from 'react-hot-toast';\n\nclass SearchBar extends Component {\n  state = {\n    searchName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ searchName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    const { searchName } = this.state;\n\n    event.preventDefault();\n\n    // Проверка на пустоту\n    if (searchName.trim() === '') {\n      return toast.error('Enter search name !');\n    }\n\n    // В форму передали сабмит\n    this.props.onSubmit(searchName);\n\n    this.setState({ searchName: '' });\n  };\n\n  render() {\n    const { handleSubmit, handleNameChange } = this;\n    const { searchName } = this.state;\n\n    return (\n      <SearchBarHeader>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormButton type=\"submit\">\n            <ImSearch />\n            <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n          </SearchFormButton>\n\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"searchName\"\n            value={searchName}\n            onChange={handleNameChange}\n          />\n        </SearchForm>\n      </SearchBarHeader>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const NoNameDiv = styled.div`\n  text-align: center;\n`;\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ImageGalleryListItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImageGalleryItemImage } from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ src, alt }) => (\n  <ImageGalleryItemImage src={src} alt={alt} />\n);\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import styled from '@emotion/styled';\n\nexport const Spinner = styled.div`\n  text-align: center;\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { Spinner } from './Loader.styled';\n\nconst PhotosLoader = () => (\n  <Spinner>\n    <Loader\n      type=\"Circles\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      timeout={3000} //3 secs\n    />\n  </Spinner>\n);\n\nexport default PhotosLoader;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '22659377-0dd97b237805bca735c774318';\n\nexport async function fetchPhotos(searchName, currentPage) {\n  const parameters = `?q=${searchName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  const url = BASE_URL + parameters;\n\n  // return fetch(\n  //   `https://pixabay.com/api/?q=${searchName}&page=1&key=22659377-0dd97b237805bca735c774318&image_type=photo&orientation=horizontal&per_page=12`,\n  // ).then(response => {\n  //   if (response.ok) {\n  //     return response.json();\n  //   }\n\n  //   return Promise.reject(new Error(`No result with name ${searchName}`));\n  // });\n\n  // AXIOS\n  const response = await axios.get(url);\n\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  max-width: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadMoreBtn } from './Button.styled';\n\nconst Button = ({ onClick }) => (\n  <LoadMoreBtn type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </LoadMoreBtn>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { toast } from 'react-toastify';\nimport toast from 'react-hot-toast';\nimport {\n  NoNameDiv,\n  ImageGalleryList,\n  ImageGalleryListItem,\n} from './ImageGallery.styled';\n\nimport ImageGalleryItem from 'components/ImageGalleryItem';\nimport PhotosLoader from 'components/Loader/Loader';\nimport { fetchPhotos } from '../../services/photos-api';\nimport Button from 'components/Button';\n\nclass ImageGallery extends Component {\n  state = {\n    photos: null,\n    // loading: false,\n    error: null,\n    status: 'idle',\n    page: 1,\n  };\n\n  // Когда компонент обновляется (обновляются или пропсы или стейт)\n  async componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.searchName;\n    const nextName = this.props.searchName;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    const prevPhotos = this.state.photos;\n    // Внутри компонента componentDidUpdate всегда обязатлеьно должна быть проверка, чтобы он не зациклился\n    if (prevName !== nextName) {\n      try {\n        console.log('Изменилось имя поиска');\n        console.log('prevName', prevName);\n        console.log('nextName', nextName);\n\n        this.setState({ status: 'pending', page: 1 });\n\n        await fetchPhotos(nextName, nextPage).then(photos =>\n          this.setState({ photos: photos.hits, status: 'resolved' }),\n        );\n      } catch (error) {\n        this.setState({ error, status: 'rejected' });\n      }\n      if (this.state.photos.length === 0) {\n        return toast.error('Ooops... There are no photos on this result!');\n      }\n      // console.log('Изменилось имя поиска');\n      // console.log('prevName', prevName);\n      // console.log('nextName', nextName);\n\n      // this.setState({ status: 'pending' });\n\n      // await fetchPhotos(nextName)\n      //   .then(photos =>\n      //     this.setState({ photos: photos.hits, status: 'resolved' }),\n      //   )\n      // .catch(error => this.setState({ error, status: 'rejected' }));\n\n      //   fetch(\n      //     `https://pixabay.com/api/?q=${nextName}&page=1&key=22659377-0dd97b237805bca735c774318&image_type=photo&orientation=horizontal&per_page=12`,\n      //   )\n      //     .then(response => {\n      //       if (response.ok) {\n      //         return response.json();\n      //       }\n\n      //       return Promise.reject(new Error(`No result with name ${nextName}`));\n      //     })\n      //     .then(photos =>\n      //       this.setState({ photos: photos.hits, status: 'resolved' }),\n      //     )\n      //     .catch(error => this.setState({ error, status: 'rejected' }));\n      //   // .finally(() => this.setState({ loading: false }));\n    }\n\n    if (prevPage !== nextPage) {\n      try {\n        console.log('Изменилась страница');\n        console.log('prevPage', prevPage);\n        console.log('nextPage', nextPage);\n\n        this.setState({ status: 'pending' });\n\n        await fetchPhotos(nextName, nextPage).then(photos =>\n          this.setState({\n            photos: [...prevPhotos, ...photos.hits],\n            status: 'resolved',\n          }),\n        );\n      } catch (error) {\n        this.setState({ error, status: 'rejected' });\n      }\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  togleLoadMoreBtn = () => {\n    console.log('btn-click');\n\n    this.setState({\n      page: this.state.page + 1,\n    });\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { photos, status } = this.state;\n    // const { searchName } = this.props;\n\n    // State-машина\n    if (status === 'idle') {\n      return <NoNameDiv>Enter search name</NoNameDiv>;\n    }\n\n    if (status === 'pending') {\n      return <PhotosLoader />;\n    }\n\n    if (status === 'rejected') {\n      //   return <p>{error.message}</p>;\n      return toast.error('Ooops... There are no photos on this result!');\n    }\n\n    if (status === 'resolved') {\n      const { togleLoadMoreBtn } = this;\n\n      return (\n        <>\n          <ImageGalleryList>\n            {photos.map(({ id, largeImageURL, tags, webformatURL }) => (\n              <ImageGalleryListItem\n                key={id}\n                onClick={() => this.props.onSelect(largeImageURL, tags)}\n              >\n                <ImageGalleryItem src={webformatURL} alt={tags} />\n              </ImageGalleryListItem>\n            ))}\n          </ImageGalleryList>\n          {photos.length >= 12 && <Button onClick={togleLoadMoreBtn}></Button>}\n        </>\n      );\n    }\n\n    // return (\n    //   <div>\n    //     {error && <h1>{error.message}</h1>}\n    //     {loading && <div>Loading...</div>}\n    //     {!searchName && <div>Введите критерий поиска</div>}\n    //     {photos && (\n    //       <ul className=\"GalleryList\">\n    //         {photos.map(photo => (\n    //           <li className=\"ImageGalleryItem\" key={photo.id}>\n    //             <ImageGalleryItem src={photo.previewURL} alt={photo.tags} />\n    //           </li>\n    //         ))}\n    //       </ul>\n    //     )}\n    //     <p>{searchName}</p>\n    //   </div>\n    // );\n  }\n}\n\nImageGallery.propTypes = {\n  searchName: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  // Слушатель событий на Виндовс можно повесить в этом методе\n  componentDidMount() {\n    console.log('ModalComponentDidMount');\n    // Вешаем слушателя событий\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    console.log('ModalComponentWillUnmount');\n    // Чистим слушатель событий\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      console.log('Нажали ESC, нужно закрыть модалку');\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = e => {\n    console.log('Click on overlay');\n\n    console.log('currentTarget: ', e.currentTarget);\n    console.log('target: ', e.target);\n\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { handleOverlayClick } = this;\n\n    return createPortal(\n      <Overlay onClick={handleOverlayClick}>\n        <ModalWindow>{this.props.children}</ModalWindow>\n      </Overlay>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Toaster } from 'react-hot-toast';\n// import { ToastContainer } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import Container from 'components/Container';\nimport { Container } from './App.styled';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Modal from 'components/Modal';\n\nclass App extends Component {\n  state = {\n    searchName: '',\n    selectedPhoto: null,\n    selectedAlt: null,\n  };\n\n  // // Фазы жизненного цикла\n  // componentDidMount() {\n  //   console.log('App componentDidMount');\n\n  //   this.setState({ loaing: true });\n\n  //   fetch(\n  //     'https://pixabay.com/api/?q=cat&page=1&key=22659377-0dd97b237805bca735c774318&image_type=photo&orientation=horizontal&per_page=12',\n  //   )\n  //     .then(res => res.json())\n  //     .then(photo => this.setState({ photo }))\n  //     .finally(() => this.setState({ loading: false }));\n  // }\n\n  // // Фазы жизненного цикла\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log('App componentDidUpdate');\n  //   // До обновления\n  //   console.log('prevState', prevState);\n  //   // После обновления\n  //   console.log('state', this.state);\n  // }\n\n  handleFormSubmit = searchName => {\n    console.log(searchName);\n    // При сабмите формы записываем значение инпута из Серчбар в Апп\n    this.setState({ searchName });\n  };\n\n  // Для выбора картинки\n  handleSelectedPhoto = (imageURL, description) =>\n    this.setState({\n      selectedPhoto: imageURL,\n      selectedAlt: description,\n    });\n\n  closeModal = () =>\n    this.setState({\n      selectedPhoto: null,\n      selectedAlt: null,\n    });\n\n  render() {\n    const { handleFormSubmit, handleSelectedPhoto, closeModal } = this;\n    const { searchName, selectedPhoto, selectedAlt } = this.state;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n        {/* <ToastContainer autoClose={3000} /> */}\n        <ImageGallery searchName={searchName} onSelect={handleSelectedPhoto} />\n        {this.state.selectedPhoto && (\n          <Modal onClose={closeModal}>\n            <img src={selectedPhoto} alt={selectedAlt} />\n          </Modal>\n        )}\n        <Toaster position=\"top-right\" />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}